// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package db

import (
	"context"
)

type Querier interface {
	CreateAuthor(ctx context.Context, arg CreateAuthorParams) (Author, error)
	CreateItem(ctx context.Context, arg CreateItemParams) (Item, error)
	CreateItemType(ctx context.Context, arg CreateItemTypeParams) (ItemType, error)
	CreatePlatform(ctx context.Context, arg CreatePlatformParams) (Platform, error)
	CreateTag(ctx context.Context, arg CreateTagParams) (Tag, error)
	DeleteAuthor(ctx context.Context, id int32) error
	DeleteItem(ctx context.Context, id int32) error
	DeleteItemType(ctx context.Context, id int32) error
	DeletePlatform(ctx context.Context, id int32) error
	DeleteTag(ctx context.Context, id int32) error
	// Authors
	GetAuthor(ctx context.Context, id int32) (Author, error)
	GetAuthorsByUser(ctx context.Context, userID *int32) ([]Author, error)
	GetItem(ctx context.Context, id int32) (Item, error)
	// Item Types
	GetItemType(ctx context.Context, id int32) (ItemType, error)
	GetItemTypesByUser(ctx context.Context, userID *int32) ([]ItemType, error)
	GetItemsByUser(ctx context.Context, userID *int32) ([]Item, error)
	// Platforms
	GetPlatform(ctx context.Context, id int32) (Platform, error)
	GetPlatformsByUser(ctx context.Context, userID *int32) ([]Platform, error)
	// Tags
	GetTag(ctx context.Context, id int32) (Tag, error)
	GetTagsByUser(ctx context.Context, userID *int32) ([]Tag, error)
	GetUnreadItemsByUser(ctx context.Context, userID *int32) ([]Item, error)
	MarkItemAsRead(ctx context.Context, id int32) error
	UpdateAuthor(ctx context.Context, arg UpdateAuthorParams) error
	UpdateItem(ctx context.Context, arg UpdateItemParams) error
	UpdateItemType(ctx context.Context, arg UpdateItemTypeParams) error
	UpdatePlatform(ctx context.Context, arg UpdatePlatformParams) error
	UpdateTag(ctx context.Context, arg UpdateTagParams) error
}

var _ Querier = (*Queries)(nil)
