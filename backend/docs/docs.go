// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "BriefBot Support",
            "email": "support@briefbot.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/digest/trigger": {
            "post": {
                "description": "Manually trigger the daily digest email sending process for all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "digest"
                ],
                "summary": "Trigger daily digest for all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/digest/trigger/integrated": {
            "post": {
                "description": "Manually trigger the integrated digest (podcast generation + email) process for all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "digest"
                ],
                "summary": "Trigger integrated digest for all users",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.MessageResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/digest/trigger/integrated/user/{userID}": {
            "post": {
                "description": "Manually trigger the integrated digest (podcast generation + email) for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "digest"
                ],
                "summary": "Trigger integrated digest for specific user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/digest/trigger/user/{userID}": {
            "post": {
                "description": "Manually trigger the daily digest email sending process for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "digest"
                ],
                "summary": "Trigger daily digest for specific user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items": {
            "post": {
                "description": "Create a new content item from URL with async processing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Create a new content item",
                "parameters": [
                    {
                        "description": "Item creation request",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.CreateItemRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.CreateItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items/status": {
            "get": {
                "description": "Retrieve content items filtered by their processing status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get items by processing status",
                "parameters": [
                    {
                        "type": "string",
                        "default": "pending",
                        "description": "Processing status (pending, processing, completed, failed)",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ItemsByStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items/user/{userID}": {
            "get": {
                "description": "Retrieve all content items for a specific user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get items by user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_yamirghofran_briefbot_internal_db.Item"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items/user/{userID}/stream": {
            "get": {
                "description": "Server-Sent Events endpoint for real-time item processing updates",
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Stream item processing updates",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SSE stream",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items/user/{userID}/unread": {
            "get": {
                "description": "Retrieve all unread content items for a specific user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get unread items by user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_yamirghofran_briefbot_internal_db.Item"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items/{id}": {
            "get": {
                "description": "Retrieve a content item's information by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get an item by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_yamirghofran_briefbot_internal_db.Item"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a content item's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Update an item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Item update request",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.UpdateItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a content item from the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Delete an item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Partially update a content item's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Patch an item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Item patch request",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.PatchItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_yamirghofran_briefbot_internal_db.Item"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items/{id}/read": {
            "patch": {
                "description": "Mark a content item as read",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Mark item as read",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_yamirghofran_briefbot_internal_db.Item"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items/{id}/status": {
            "get": {
                "description": "Retrieve the processing status of a content item",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get item processing status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ItemProcessingStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items/{id}/toggle-read": {
            "patch": {
                "description": "Toggle a content item's read/unread status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Toggle item read status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_yamirghofran_briefbot_internal_db.Item"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/podcasts": {
            "post": {
                "description": "Generate a podcast from multiple content items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "podcasts"
                ],
                "summary": "Create a new podcast",
                "parameters": [
                    {
                        "description": "Podcast creation request",
                        "name": "podcast",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.CreatePodcastRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.CreatePodcastResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/podcasts/from-item": {
            "post": {
                "description": "Generate a podcast from a single content item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "podcasts"
                ],
                "summary": "Create podcast from single item",
                "parameters": [
                    {
                        "description": "Podcast from item request",
                        "name": "podcast",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.CreatePodcastFromItemRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.CreatePodcastResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/podcasts/pending": {
            "get": {
                "description": "Retrieve pending podcasts awaiting processing",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "podcasts"
                ],
                "summary": "Get pending podcasts",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Maximum number of podcasts to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.PodcastsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/podcasts/status/{status}": {
            "get": {
                "description": "Retrieve podcasts filtered by their processing status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "podcasts"
                ],
                "summary": "Get podcasts by status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Podcast status (pending, writing, generating, completed, failed)",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.PodcastsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/podcasts/user/{userID}": {
            "get": {
                "description": "Retrieve all podcasts for a specific user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "podcasts"
                ],
                "summary": "Get podcasts by user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.PodcastsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/podcasts/user/{userID}/stream": {
            "get": {
                "description": "Server-Sent Events endpoint for real-time podcast processing updates",
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "podcasts"
                ],
                "summary": "Stream podcast updates",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SSE stream",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/podcasts/{id}": {
            "get": {
                "description": "Retrieve a podcast's information by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "podcasts"
                ],
                "summary": "Get a podcast by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Podcast ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_yamirghofran_briefbot_internal_db.Podcast"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update podcast metadata (title and description)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "podcasts"
                ],
                "summary": "Update podcast",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Podcast ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Podcast update request",
                        "name": "podcast",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.UpdatePodcastRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a podcast from the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "podcasts"
                ],
                "summary": "Delete podcast",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Podcast ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/podcasts/{id}/audio": {
            "get": {
                "description": "Retrieve the audio URL for a completed podcast",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "podcasts"
                ],
                "summary": "Get podcast audio",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Podcast ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.PodcastAudioResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/podcasts/{id}/items": {
            "get": {
                "description": "Retrieve all content items in a podcast",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "podcasts"
                ],
                "summary": "Get podcast items",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Podcast ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.PodcastItemsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a content item to an existing podcast",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "podcasts"
                ],
                "summary": "Add item to podcast",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Podcast ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Add item request",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.AddItemToPodcastRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/podcasts/{id}/items/{itemID}": {
            "delete": {
                "description": "Remove a content item from a podcast",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "podcasts"
                ],
                "summary": "Remove item from podcast",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Podcast ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "itemID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/podcasts/{id}/status": {
            "get": {
                "description": "Retrieve the processing status of a podcast",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "podcasts"
                ],
                "summary": "Get podcast processing status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Podcast ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.PodcastProcessingStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/podcasts/{id}/upload-url": {
            "get": {
                "description": "Generate a presigned URL for uploading podcast audio to R2 storage",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "podcasts"
                ],
                "summary": "Generate podcast upload URL",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Podcast ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.PodcastUploadInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Retrieve a list of all users in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_yamirghofran_briefbot_internal_db.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user account with optional OAuth or password authentication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User creation request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_yamirghofran_briefbot_internal_db.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/email/{email}": {
            "get": {
                "description": "Retrieve a user's information by their email address",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_yamirghofran_briefbot_internal_db.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Retrieve a user's information by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_yamirghofran_briefbot_internal_db.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user from the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_yamirghofran_briefbot_internal_db.Item": {
            "type": "object",
            "properties": {
                "authors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_read": {
                    "type": "boolean"
                },
                "modified_at": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "processing_error": {
                    "type": "string"
                },
                "processing_status": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "text_content": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_yamirghofran_briefbot_internal_db.Podcast": {
            "type": "object",
            "properties": {
                "audio_url": {
                    "type": "string"
                },
                "completed_at": {
                    "$ref": "#/definitions/pgtype.Timestamp"
                },
                "created_at": {
                    "$ref": "#/definitions/pgtype.Timestamp"
                },
                "description": {
                    "type": "string"
                },
                "dialogues": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "duration_seconds": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "$ref": "#/definitions/pgtype.Timestamp"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_yamirghofran_briefbot_internal_db.User": {
            "type": "object",
            "properties": {
                "auth_provider": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "oauth_id": {
                    "type": "string"
                },
                "password_hash": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.AddItemToPodcastRequest": {
            "type": "object",
            "required": [
                "item_id"
            ],
            "properties": {
                "item_id": {
                    "type": "integer",
                    "example": 1
                },
                "order": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "internal_handlers.CreateItemRequest": {
            "type": "object",
            "required": [
                "url",
                "user_id"
            ],
            "properties": {
                "url": {
                    "type": "string",
                    "example": "https://example.com/article"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "internal_handlers.CreateItemResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/definitions/github_com_yamirghofran_briefbot_internal_db.Item"
                },
                "message": {
                    "type": "string"
                },
                "processing_status": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.CreatePodcastFromItemRequest": {
            "type": "object",
            "required": [
                "item_id",
                "user_id"
            ],
            "properties": {
                "item_id": {
                    "type": "integer",
                    "example": 1
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "internal_handlers.CreatePodcastRequest": {
            "type": "object",
            "required": [
                "item_ids",
                "title",
                "user_id"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Today's top articles"
                },
                "item_ids": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3
                    ]
                },
                "title": {
                    "type": "string",
                    "example": "My Daily Digest"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "internal_handlers.CreatePodcastResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "podcast": {
                    "$ref": "#/definitions/github_com_yamirghofran_briefbot_internal_db.Podcast"
                },
                "processing_status": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.CreateUserRequest": {
            "type": "object",
            "properties": {
                "auth_provider": {
                    "type": "string",
                    "example": "google"
                },
                "email": {
                    "type": "string",
                    "example": "john@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "oauth_id": {
                    "type": "string",
                    "example": "google_123456"
                },
                "password_hash": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid request"
                }
            }
        },
        "internal_handlers.ItemProcessingStatusResponse": {
            "type": "object",
            "properties": {
                "is_completed": {
                    "type": "boolean"
                },
                "is_failed": {
                    "type": "boolean"
                },
                "is_processing": {
                    "type": "boolean"
                },
                "item_id": {
                    "type": "integer"
                },
                "processing_error": {
                    "type": "string"
                },
                "processing_status": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.ItemsByStatusResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_yamirghofran_briefbot_internal_db.Item"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Operation successful"
                }
            }
        },
        "internal_handlers.PatchItemRequest": {
            "type": "object",
            "properties": {
                "authors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "John Doe"
                    ]
                },
                "summary": {
                    "type": "string",
                    "example": "Updated summary"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "tech",
                        "news"
                    ]
                },
                "title": {
                    "type": "string",
                    "example": "Updated Title"
                }
            }
        },
        "internal_handlers.PodcastAudioResponse": {
            "type": "object",
            "properties": {
                "audio_url": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.PodcastItemsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_yamirghofran_briefbot_internal_db.Item"
                    }
                }
            }
        },
        "internal_handlers.PodcastProcessingStatusResponse": {
            "type": "object",
            "properties": {
                "audio_url": {
                    "type": "string"
                },
                "is_completed": {
                    "type": "boolean"
                },
                "is_failed": {
                    "type": "boolean"
                },
                "is_generating": {
                    "type": "boolean"
                },
                "is_pending": {
                    "type": "boolean"
                },
                "is_processing": {
                    "type": "boolean"
                },
                "is_writing": {
                    "type": "boolean"
                },
                "podcast_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.PodcastUploadInfo": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "public_url": {
                    "type": "string"
                },
                "upload_url": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.PodcastsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "podcasts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_yamirghofran_briefbot_internal_db.Podcast"
                    }
                }
            }
        },
        "internal_handlers.UpdateItemRequest": {
            "type": "object",
            "properties": {
                "authors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_read": {
                    "type": "boolean"
                },
                "platform": {
                    "type": "string",
                    "example": "web"
                },
                "summary": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "text_content": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "example": "Article Title"
                },
                "type": {
                    "type": "string",
                    "example": "article"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.UpdatePodcastRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Updated description"
                },
                "title": {
                    "type": "string",
                    "example": "Updated Title"
                }
            }
        },
        "internal_handlers.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "auth_provider": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "example": "jane@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "Jane Doe"
                },
                "oauth_id": {
                    "type": "string"
                },
                "password_hash": {
                    "type": "string"
                }
            }
        },
        "pgtype.InfinityModifier": {
            "type": "integer",
            "format": "int32",
            "enum": [
                1,
                0,
                -1
            ],
            "x-enum-varnames": [
                "Infinity",
                "Finite",
                "NegativeInfinity"
            ]
        },
        "pgtype.Timestamp": {
            "type": "object",
            "properties": {
                "infinityModifier": {
                    "$ref": "#/definitions/pgtype.InfinityModifier"
                },
                "time": {
                    "description": "Time zone will be ignored when encoding to PostgreSQL.",
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        }
    },
    "tags": [
        {
            "description": "User management operations",
            "name": "users"
        },
        {
            "description": "Content item operations with async processing",
            "name": "items"
        },
        {
            "description": "Podcast generation and management",
            "name": "podcasts"
        },
        {
            "description": "Daily digest email triggers",
            "name": "digest"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "BriefBot API",
	Description:      "BriefBot backend API for managing content items, podcasts, and daily digests\nSupports real-time updates via Server-Sent Events (SSE)",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
